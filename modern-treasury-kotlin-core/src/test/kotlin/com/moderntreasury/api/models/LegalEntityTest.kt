// File generated from our OpenAPI spec by Stainless.

package com.moderntreasury.api.models

import com.fasterxml.jackson.module.kotlin.jacksonTypeRef
import com.moderntreasury.api.core.JsonValue
import com.moderntreasury.api.core.jsonMapper
import java.time.LocalDate
import java.time.OffsetDateTime
import org.assertj.core.api.Assertions.assertThat
import org.junit.jupiter.api.Test

internal class LegalEntityTest {

    @Test
    fun create() {
        val legalEntity =
            LegalEntity.builder()
                .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                .addAddress(
                    LegalEntity.LegalEntityAddress.builder()
                        .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                        .addAddressType(LegalEntity.LegalEntityAddress.AddressType.BUSINESS)
                        .country("country")
                        .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .discardedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .line1("line1")
                        .line2("line2")
                        .liveMode(true)
                        .locality("locality")
                        .object_("object")
                        .postalCode("postal_code")
                        .region("region")
                        .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .build()
                )
                .bankSettings(
                    BankSettings.builder()
                        .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                        .backupWithholdingPercentage(0L)
                        .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .discardedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .enableBackupWithholding(true)
                        .liveMode(true)
                        .object_("object")
                        .privacyOptOut(true)
                        .regulationO(true)
                        .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .build()
                )
                .businessName("business_name")
                .citizenshipCountry("citizenship_country")
                .complianceDetails(
                    LegalEntityComplianceDetail.builder()
                        .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                        .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .discardedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .issuer("issuer")
                        .liveMode(true)
                        .object_("object")
                        .tokenExpiresAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .tokenIssuedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .tokenUrl("token_url")
                        .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .entityValidated(true)
                        .validatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .build()
                )
                .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                .dateFormed(LocalDate.parse("2019-12-27"))
                .dateOfBirth(LocalDate.parse("2019-12-27"))
                .discardedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                .addDoingBusinessAsName("string")
                .email("email")
                .firstName("first_name")
                .addIdentification(
                    LegalEntity.Identification.builder()
                        .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                        .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .discardedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .expirationDate(LocalDate.parse("2019-12-27"))
                        .idType(LegalEntity.Identification.IdType.AR_CUIL)
                        .issuingCountry("issuing_country")
                        .issuingRegion("issuing_region")
                        .liveMode(true)
                        .object_("object")
                        .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .build()
                )
                .addIndustryClassification(
                    LegalEntityIndustryClassification.builder()
                        .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                        .addClassificationCode("string")
                        .classificationType(
                            LegalEntityIndustryClassification.ClassificationType.ANZSIC
                        )
                        .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .discardedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .liveMode(true)
                        .object_("object")
                        .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .build()
                )
                .lastName("last_name")
                .addLegalEntityAssociation(
                    LegalEntityAssociation.builder()
                        .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                        .childLegalEntity(
                            LegalEntityAssociation.ChildLegalEntity.builder()
                                .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                                .addAddress(
                                    LegalEntityAssociation.ChildLegalEntity.LegalEntityAddress
                                        .builder()
                                        .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                                        .addAddressType(
                                            LegalEntityAssociation.ChildLegalEntity
                                                .LegalEntityAddress
                                                .AddressType
                                                .BUSINESS
                                        )
                                        .country("country")
                                        .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                        .discardedAt(
                                            OffsetDateTime.parse("2019-12-27T18:11:19.117Z")
                                        )
                                        .line1("line1")
                                        .line2("line2")
                                        .liveMode(true)
                                        .locality("locality")
                                        .object_("object")
                                        .postalCode("postal_code")
                                        .region("region")
                                        .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                        .build()
                                )
                                .bankSettings(
                                    BankSettings.builder()
                                        .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                                        .backupWithholdingPercentage(0L)
                                        .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                        .discardedAt(
                                            OffsetDateTime.parse("2019-12-27T18:11:19.117Z")
                                        )
                                        .enableBackupWithholding(true)
                                        .liveMode(true)
                                        .object_("object")
                                        .privacyOptOut(true)
                                        .regulationO(true)
                                        .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                        .build()
                                )
                                .businessName("business_name")
                                .citizenshipCountry("citizenship_country")
                                .complianceDetails(
                                    LegalEntityComplianceDetail.builder()
                                        .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                                        .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                        .discardedAt(
                                            OffsetDateTime.parse("2019-12-27T18:11:19.117Z")
                                        )
                                        .issuer("issuer")
                                        .liveMode(true)
                                        .object_("object")
                                        .tokenExpiresAt(
                                            OffsetDateTime.parse("2019-12-27T18:11:19.117Z")
                                        )
                                        .tokenIssuedAt(
                                            OffsetDateTime.parse("2019-12-27T18:11:19.117Z")
                                        )
                                        .tokenUrl("token_url")
                                        .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                        .entityValidated(true)
                                        .validatedAt(
                                            OffsetDateTime.parse("2019-12-27T18:11:19.117Z")
                                        )
                                        .build()
                                )
                                .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                .dateFormed(LocalDate.parse("2019-12-27"))
                                .dateOfBirth(LocalDate.parse("2019-12-27"))
                                .discardedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                .addDoingBusinessAsName("string")
                                .email("email")
                                .firstName("first_name")
                                .addIdentification(
                                    LegalEntityAssociation.ChildLegalEntity.Identification.builder()
                                        .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                                        .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                        .discardedAt(
                                            OffsetDateTime.parse("2019-12-27T18:11:19.117Z")
                                        )
                                        .expirationDate(LocalDate.parse("2019-12-27"))
                                        .idType(
                                            LegalEntityAssociation.ChildLegalEntity.Identification
                                                .IdType
                                                .AR_CUIL
                                        )
                                        .issuingCountry("issuing_country")
                                        .issuingRegion("issuing_region")
                                        .liveMode(true)
                                        .object_("object")
                                        .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                        .build()
                                )
                                .addIndustryClassification(
                                    LegalEntityIndustryClassification.builder()
                                        .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                                        .addClassificationCode("string")
                                        .classificationType(
                                            LegalEntityIndustryClassification.ClassificationType
                                                .ANZSIC
                                        )
                                        .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                        .discardedAt(
                                            OffsetDateTime.parse("2019-12-27T18:11:19.117Z")
                                        )
                                        .liveMode(true)
                                        .object_("object")
                                        .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                        .build()
                                )
                                .lastName("last_name")
                                .legalEntityType(
                                    LegalEntityAssociation.ChildLegalEntity.LegalEntityType.BUSINESS
                                )
                                .legalStructure(
                                    LegalEntityAssociation.ChildLegalEntity.LegalStructure
                                        .CORPORATION
                                )
                                .liveMode(true)
                                .metadata(
                                    LegalEntityAssociation.ChildLegalEntity.Metadata.builder()
                                        .putAdditionalProperty("key", JsonValue.from("value"))
                                        .putAdditionalProperty("foo", JsonValue.from("bar"))
                                        .putAdditionalProperty("modern", JsonValue.from("treasury"))
                                        .build()
                                )
                                .middleName("middle_name")
                                .object_("object")
                                .addPhoneNumber(
                                    LegalEntityAssociation.ChildLegalEntity.PhoneNumber.builder()
                                        .phoneNumber("phone_number")
                                        .build()
                                )
                                .politicallyExposedPerson(true)
                                .preferredName("preferred_name")
                                .prefix("prefix")
                                .riskRating(LegalEntityAssociation.ChildLegalEntity.RiskRating.LOW)
                                .suffix("suffix")
                                .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                .wealthAndEmploymentDetails(
                                    WealthAndEmploymentDetails.builder()
                                        .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                                        .annualIncome(0L)
                                        .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                        .discardedAt(
                                            OffsetDateTime.parse("2019-12-27T18:11:19.117Z")
                                        )
                                        .employerCountry("employer_country")
                                        .employerName("employer_name")
                                        .employerState("employer_state")
                                        .employmentStatus(
                                            WealthAndEmploymentDetails.EmploymentStatus.EMPLOYED
                                        )
                                        .incomeCountry("income_country")
                                        .incomeSource(
                                            WealthAndEmploymentDetails.IncomeSource.FAMILY_SUPPORT
                                        )
                                        .incomeState("income_state")
                                        .industry(WealthAndEmploymentDetails.Industry.ACCOUNTING)
                                        .liveMode(true)
                                        .object_("object")
                                        .occupation(
                                            WealthAndEmploymentDetails.Occupation.CONSULTING
                                        )
                                        .sourceOfFunds(
                                            WealthAndEmploymentDetails.SourceOfFunds.ALIMONY
                                        )
                                        .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                        .wealthSource(
                                            WealthAndEmploymentDetails.WealthSource.BUSINESS_SALE
                                        )
                                        .build()
                                )
                                .website("website")
                                .build()
                        )
                        .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .discardedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .liveMode(true)
                        .object_("object")
                        .ownershipPercentage(0L)
                        .parentLegalEntityId("parent_legal_entity_id")
                        .addRelationshipType(
                            LegalEntityAssociation.RelationshipType.AUTHORIZED_SIGNER
                        )
                        .title("title")
                        .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .build()
                )
                .legalEntityType(LegalEntity.LegalEntityType.BUSINESS)
                .legalStructure(LegalEntity.LegalStructure.CORPORATION)
                .liveMode(true)
                .metadata(
                    LegalEntity.Metadata.builder()
                        .putAdditionalProperty("key", JsonValue.from("value"))
                        .putAdditionalProperty("foo", JsonValue.from("bar"))
                        .putAdditionalProperty("modern", JsonValue.from("treasury"))
                        .build()
                )
                .middleName("middle_name")
                .object_("object")
                .addPhoneNumber(
                    LegalEntity.PhoneNumber.builder().phoneNumber("phone_number").build()
                )
                .politicallyExposedPerson(true)
                .preferredName("preferred_name")
                .prefix("prefix")
                .riskRating(LegalEntity.RiskRating.LOW)
                .suffix("suffix")
                .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                .wealthAndEmploymentDetails(
                    WealthAndEmploymentDetails.builder()
                        .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                        .annualIncome(0L)
                        .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .discardedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .employerCountry("employer_country")
                        .employerName("employer_name")
                        .employerState("employer_state")
                        .employmentStatus(WealthAndEmploymentDetails.EmploymentStatus.EMPLOYED)
                        .incomeCountry("income_country")
                        .incomeSource(WealthAndEmploymentDetails.IncomeSource.FAMILY_SUPPORT)
                        .incomeState("income_state")
                        .industry(WealthAndEmploymentDetails.Industry.ACCOUNTING)
                        .liveMode(true)
                        .object_("object")
                        .occupation(WealthAndEmploymentDetails.Occupation.CONSULTING)
                        .sourceOfFunds(WealthAndEmploymentDetails.SourceOfFunds.ALIMONY)
                        .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .wealthSource(WealthAndEmploymentDetails.WealthSource.BUSINESS_SALE)
                        .build()
                )
                .website("website")
                .build()

        assertThat(legalEntity.id()).isEqualTo("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
        assertThat(legalEntity.addresses())
            .containsExactly(
                LegalEntity.LegalEntityAddress.builder()
                    .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                    .addAddressType(LegalEntity.LegalEntityAddress.AddressType.BUSINESS)
                    .country("country")
                    .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                    .discardedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                    .line1("line1")
                    .line2("line2")
                    .liveMode(true)
                    .locality("locality")
                    .object_("object")
                    .postalCode("postal_code")
                    .region("region")
                    .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                    .build()
            )
        assertThat(legalEntity.bankSettings())
            .isEqualTo(
                BankSettings.builder()
                    .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                    .backupWithholdingPercentage(0L)
                    .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                    .discardedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                    .enableBackupWithholding(true)
                    .liveMode(true)
                    .object_("object")
                    .privacyOptOut(true)
                    .regulationO(true)
                    .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                    .build()
            )
        assertThat(legalEntity.businessName()).isEqualTo("business_name")
        assertThat(legalEntity.citizenshipCountry()).isEqualTo("citizenship_country")
        assertThat(legalEntity.complianceDetails())
            .isEqualTo(
                LegalEntityComplianceDetail.builder()
                    .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                    .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                    .discardedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                    .issuer("issuer")
                    .liveMode(true)
                    .object_("object")
                    .tokenExpiresAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                    .tokenIssuedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                    .tokenUrl("token_url")
                    .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                    .entityValidated(true)
                    .validatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                    .build()
            )
        assertThat(legalEntity.createdAt())
            .isEqualTo(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
        assertThat(legalEntity.dateFormed()).isEqualTo(LocalDate.parse("2019-12-27"))
        assertThat(legalEntity.dateOfBirth()).isEqualTo(LocalDate.parse("2019-12-27"))
        assertThat(legalEntity.discardedAt())
            .isEqualTo(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
        assertThat(legalEntity.doingBusinessAsNames()).containsExactly("string")
        assertThat(legalEntity.email()).isEqualTo("email")
        assertThat(legalEntity.firstName()).isEqualTo("first_name")
        assertThat(legalEntity.identifications())
            .containsExactly(
                LegalEntity.Identification.builder()
                    .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                    .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                    .discardedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                    .expirationDate(LocalDate.parse("2019-12-27"))
                    .idType(LegalEntity.Identification.IdType.AR_CUIL)
                    .issuingCountry("issuing_country")
                    .issuingRegion("issuing_region")
                    .liveMode(true)
                    .object_("object")
                    .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                    .build()
            )
        assertThat(legalEntity.industryClassifications())
            .containsExactly(
                LegalEntityIndustryClassification.builder()
                    .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                    .addClassificationCode("string")
                    .classificationType(LegalEntityIndustryClassification.ClassificationType.ANZSIC)
                    .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                    .discardedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                    .liveMode(true)
                    .object_("object")
                    .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                    .build()
            )
        assertThat(legalEntity.lastName()).isEqualTo("last_name")
        assertThat(legalEntity.legalEntityAssociations())
            .containsExactly(
                LegalEntityAssociation.builder()
                    .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                    .childLegalEntity(
                        LegalEntityAssociation.ChildLegalEntity.builder()
                            .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                            .addAddress(
                                LegalEntityAssociation.ChildLegalEntity.LegalEntityAddress.builder()
                                    .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                                    .addAddressType(
                                        LegalEntityAssociation.ChildLegalEntity.LegalEntityAddress
                                            .AddressType
                                            .BUSINESS
                                    )
                                    .country("country")
                                    .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                    .discardedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                    .line1("line1")
                                    .line2("line2")
                                    .liveMode(true)
                                    .locality("locality")
                                    .object_("object")
                                    .postalCode("postal_code")
                                    .region("region")
                                    .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                    .build()
                            )
                            .bankSettings(
                                BankSettings.builder()
                                    .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                                    .backupWithholdingPercentage(0L)
                                    .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                    .discardedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                    .enableBackupWithholding(true)
                                    .liveMode(true)
                                    .object_("object")
                                    .privacyOptOut(true)
                                    .regulationO(true)
                                    .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                    .build()
                            )
                            .businessName("business_name")
                            .citizenshipCountry("citizenship_country")
                            .complianceDetails(
                                LegalEntityComplianceDetail.builder()
                                    .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                                    .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                    .discardedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                    .issuer("issuer")
                                    .liveMode(true)
                                    .object_("object")
                                    .tokenExpiresAt(
                                        OffsetDateTime.parse("2019-12-27T18:11:19.117Z")
                                    )
                                    .tokenIssuedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                    .tokenUrl("token_url")
                                    .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                    .entityValidated(true)
                                    .validatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                    .build()
                            )
                            .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                            .dateFormed(LocalDate.parse("2019-12-27"))
                            .dateOfBirth(LocalDate.parse("2019-12-27"))
                            .discardedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                            .addDoingBusinessAsName("string")
                            .email("email")
                            .firstName("first_name")
                            .addIdentification(
                                LegalEntityAssociation.ChildLegalEntity.Identification.builder()
                                    .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                                    .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                    .discardedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                    .expirationDate(LocalDate.parse("2019-12-27"))
                                    .idType(
                                        LegalEntityAssociation.ChildLegalEntity.Identification
                                            .IdType
                                            .AR_CUIL
                                    )
                                    .issuingCountry("issuing_country")
                                    .issuingRegion("issuing_region")
                                    .liveMode(true)
                                    .object_("object")
                                    .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                    .build()
                            )
                            .addIndustryClassification(
                                LegalEntityIndustryClassification.builder()
                                    .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                                    .addClassificationCode("string")
                                    .classificationType(
                                        LegalEntityIndustryClassification.ClassificationType.ANZSIC
                                    )
                                    .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                    .discardedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                    .liveMode(true)
                                    .object_("object")
                                    .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                    .build()
                            )
                            .lastName("last_name")
                            .legalEntityType(
                                LegalEntityAssociation.ChildLegalEntity.LegalEntityType.BUSINESS
                            )
                            .legalStructure(
                                LegalEntityAssociation.ChildLegalEntity.LegalStructure.CORPORATION
                            )
                            .liveMode(true)
                            .metadata(
                                LegalEntityAssociation.ChildLegalEntity.Metadata.builder()
                                    .putAdditionalProperty("key", JsonValue.from("value"))
                                    .putAdditionalProperty("foo", JsonValue.from("bar"))
                                    .putAdditionalProperty("modern", JsonValue.from("treasury"))
                                    .build()
                            )
                            .middleName("middle_name")
                            .object_("object")
                            .addPhoneNumber(
                                LegalEntityAssociation.ChildLegalEntity.PhoneNumber.builder()
                                    .phoneNumber("phone_number")
                                    .build()
                            )
                            .politicallyExposedPerson(true)
                            .preferredName("preferred_name")
                            .prefix("prefix")
                            .riskRating(LegalEntityAssociation.ChildLegalEntity.RiskRating.LOW)
                            .suffix("suffix")
                            .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                            .wealthAndEmploymentDetails(
                                WealthAndEmploymentDetails.builder()
                                    .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                                    .annualIncome(0L)
                                    .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                    .discardedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                    .employerCountry("employer_country")
                                    .employerName("employer_name")
                                    .employerState("employer_state")
                                    .employmentStatus(
                                        WealthAndEmploymentDetails.EmploymentStatus.EMPLOYED
                                    )
                                    .incomeCountry("income_country")
                                    .incomeSource(
                                        WealthAndEmploymentDetails.IncomeSource.FAMILY_SUPPORT
                                    )
                                    .incomeState("income_state")
                                    .industry(WealthAndEmploymentDetails.Industry.ACCOUNTING)
                                    .liveMode(true)
                                    .object_("object")
                                    .occupation(WealthAndEmploymentDetails.Occupation.CONSULTING)
                                    .sourceOfFunds(WealthAndEmploymentDetails.SourceOfFunds.ALIMONY)
                                    .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                    .wealthSource(
                                        WealthAndEmploymentDetails.WealthSource.BUSINESS_SALE
                                    )
                                    .build()
                            )
                            .website("website")
                            .build()
                    )
                    .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                    .discardedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                    .liveMode(true)
                    .object_("object")
                    .ownershipPercentage(0L)
                    .parentLegalEntityId("parent_legal_entity_id")
                    .addRelationshipType(LegalEntityAssociation.RelationshipType.AUTHORIZED_SIGNER)
                    .title("title")
                    .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                    .build()
            )
        assertThat(legalEntity.legalEntityType()).isEqualTo(LegalEntity.LegalEntityType.BUSINESS)
        assertThat(legalEntity.legalStructure()).isEqualTo(LegalEntity.LegalStructure.CORPORATION)
        assertThat(legalEntity.liveMode()).isEqualTo(true)
        assertThat(legalEntity.metadata())
            .isEqualTo(
                LegalEntity.Metadata.builder()
                    .putAdditionalProperty("key", JsonValue.from("value"))
                    .putAdditionalProperty("foo", JsonValue.from("bar"))
                    .putAdditionalProperty("modern", JsonValue.from("treasury"))
                    .build()
            )
        assertThat(legalEntity.middleName()).isEqualTo("middle_name")
        assertThat(legalEntity.object_()).isEqualTo("object")
        assertThat(legalEntity.phoneNumbers())
            .containsExactly(LegalEntity.PhoneNumber.builder().phoneNumber("phone_number").build())
        assertThat(legalEntity.politicallyExposedPerson()).isEqualTo(true)
        assertThat(legalEntity.preferredName()).isEqualTo("preferred_name")
        assertThat(legalEntity.prefix()).isEqualTo("prefix")
        assertThat(legalEntity.riskRating()).isEqualTo(LegalEntity.RiskRating.LOW)
        assertThat(legalEntity.suffix()).isEqualTo("suffix")
        assertThat(legalEntity.updatedAt())
            .isEqualTo(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
        assertThat(legalEntity.wealthAndEmploymentDetails())
            .isEqualTo(
                WealthAndEmploymentDetails.builder()
                    .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                    .annualIncome(0L)
                    .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                    .discardedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                    .employerCountry("employer_country")
                    .employerName("employer_name")
                    .employerState("employer_state")
                    .employmentStatus(WealthAndEmploymentDetails.EmploymentStatus.EMPLOYED)
                    .incomeCountry("income_country")
                    .incomeSource(WealthAndEmploymentDetails.IncomeSource.FAMILY_SUPPORT)
                    .incomeState("income_state")
                    .industry(WealthAndEmploymentDetails.Industry.ACCOUNTING)
                    .liveMode(true)
                    .object_("object")
                    .occupation(WealthAndEmploymentDetails.Occupation.CONSULTING)
                    .sourceOfFunds(WealthAndEmploymentDetails.SourceOfFunds.ALIMONY)
                    .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                    .wealthSource(WealthAndEmploymentDetails.WealthSource.BUSINESS_SALE)
                    .build()
            )
        assertThat(legalEntity.website()).isEqualTo("website")
    }

    @Test
    fun roundtrip() {
        val jsonMapper = jsonMapper()
        val legalEntity =
            LegalEntity.builder()
                .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                .addAddress(
                    LegalEntity.LegalEntityAddress.builder()
                        .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                        .addAddressType(LegalEntity.LegalEntityAddress.AddressType.BUSINESS)
                        .country("country")
                        .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .discardedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .line1("line1")
                        .line2("line2")
                        .liveMode(true)
                        .locality("locality")
                        .object_("object")
                        .postalCode("postal_code")
                        .region("region")
                        .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .build()
                )
                .bankSettings(
                    BankSettings.builder()
                        .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                        .backupWithholdingPercentage(0L)
                        .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .discardedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .enableBackupWithholding(true)
                        .liveMode(true)
                        .object_("object")
                        .privacyOptOut(true)
                        .regulationO(true)
                        .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .build()
                )
                .businessName("business_name")
                .citizenshipCountry("citizenship_country")
                .complianceDetails(
                    LegalEntityComplianceDetail.builder()
                        .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                        .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .discardedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .issuer("issuer")
                        .liveMode(true)
                        .object_("object")
                        .tokenExpiresAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .tokenIssuedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .tokenUrl("token_url")
                        .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .entityValidated(true)
                        .validatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .build()
                )
                .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                .dateFormed(LocalDate.parse("2019-12-27"))
                .dateOfBirth(LocalDate.parse("2019-12-27"))
                .discardedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                .addDoingBusinessAsName("string")
                .email("email")
                .firstName("first_name")
                .addIdentification(
                    LegalEntity.Identification.builder()
                        .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                        .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .discardedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .expirationDate(LocalDate.parse("2019-12-27"))
                        .idType(LegalEntity.Identification.IdType.AR_CUIL)
                        .issuingCountry("issuing_country")
                        .issuingRegion("issuing_region")
                        .liveMode(true)
                        .object_("object")
                        .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .build()
                )
                .addIndustryClassification(
                    LegalEntityIndustryClassification.builder()
                        .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                        .addClassificationCode("string")
                        .classificationType(
                            LegalEntityIndustryClassification.ClassificationType.ANZSIC
                        )
                        .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .discardedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .liveMode(true)
                        .object_("object")
                        .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .build()
                )
                .lastName("last_name")
                .addLegalEntityAssociation(
                    LegalEntityAssociation.builder()
                        .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                        .childLegalEntity(
                            LegalEntityAssociation.ChildLegalEntity.builder()
                                .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                                .addAddress(
                                    LegalEntityAssociation.ChildLegalEntity.LegalEntityAddress
                                        .builder()
                                        .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                                        .addAddressType(
                                            LegalEntityAssociation.ChildLegalEntity
                                                .LegalEntityAddress
                                                .AddressType
                                                .BUSINESS
                                        )
                                        .country("country")
                                        .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                        .discardedAt(
                                            OffsetDateTime.parse("2019-12-27T18:11:19.117Z")
                                        )
                                        .line1("line1")
                                        .line2("line2")
                                        .liveMode(true)
                                        .locality("locality")
                                        .object_("object")
                                        .postalCode("postal_code")
                                        .region("region")
                                        .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                        .build()
                                )
                                .bankSettings(
                                    BankSettings.builder()
                                        .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                                        .backupWithholdingPercentage(0L)
                                        .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                        .discardedAt(
                                            OffsetDateTime.parse("2019-12-27T18:11:19.117Z")
                                        )
                                        .enableBackupWithholding(true)
                                        .liveMode(true)
                                        .object_("object")
                                        .privacyOptOut(true)
                                        .regulationO(true)
                                        .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                        .build()
                                )
                                .businessName("business_name")
                                .citizenshipCountry("citizenship_country")
                                .complianceDetails(
                                    LegalEntityComplianceDetail.builder()
                                        .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                                        .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                        .discardedAt(
                                            OffsetDateTime.parse("2019-12-27T18:11:19.117Z")
                                        )
                                        .issuer("issuer")
                                        .liveMode(true)
                                        .object_("object")
                                        .tokenExpiresAt(
                                            OffsetDateTime.parse("2019-12-27T18:11:19.117Z")
                                        )
                                        .tokenIssuedAt(
                                            OffsetDateTime.parse("2019-12-27T18:11:19.117Z")
                                        )
                                        .tokenUrl("token_url")
                                        .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                        .entityValidated(true)
                                        .validatedAt(
                                            OffsetDateTime.parse("2019-12-27T18:11:19.117Z")
                                        )
                                        .build()
                                )
                                .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                .dateFormed(LocalDate.parse("2019-12-27"))
                                .dateOfBirth(LocalDate.parse("2019-12-27"))
                                .discardedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                .addDoingBusinessAsName("string")
                                .email("email")
                                .firstName("first_name")
                                .addIdentification(
                                    LegalEntityAssociation.ChildLegalEntity.Identification.builder()
                                        .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                                        .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                        .discardedAt(
                                            OffsetDateTime.parse("2019-12-27T18:11:19.117Z")
                                        )
                                        .expirationDate(LocalDate.parse("2019-12-27"))
                                        .idType(
                                            LegalEntityAssociation.ChildLegalEntity.Identification
                                                .IdType
                                                .AR_CUIL
                                        )
                                        .issuingCountry("issuing_country")
                                        .issuingRegion("issuing_region")
                                        .liveMode(true)
                                        .object_("object")
                                        .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                        .build()
                                )
                                .addIndustryClassification(
                                    LegalEntityIndustryClassification.builder()
                                        .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                                        .addClassificationCode("string")
                                        .classificationType(
                                            LegalEntityIndustryClassification.ClassificationType
                                                .ANZSIC
                                        )
                                        .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                        .discardedAt(
                                            OffsetDateTime.parse("2019-12-27T18:11:19.117Z")
                                        )
                                        .liveMode(true)
                                        .object_("object")
                                        .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                        .build()
                                )
                                .lastName("last_name")
                                .legalEntityType(
                                    LegalEntityAssociation.ChildLegalEntity.LegalEntityType.BUSINESS
                                )
                                .legalStructure(
                                    LegalEntityAssociation.ChildLegalEntity.LegalStructure
                                        .CORPORATION
                                )
                                .liveMode(true)
                                .metadata(
                                    LegalEntityAssociation.ChildLegalEntity.Metadata.builder()
                                        .putAdditionalProperty("key", JsonValue.from("value"))
                                        .putAdditionalProperty("foo", JsonValue.from("bar"))
                                        .putAdditionalProperty("modern", JsonValue.from("treasury"))
                                        .build()
                                )
                                .middleName("middle_name")
                                .object_("object")
                                .addPhoneNumber(
                                    LegalEntityAssociation.ChildLegalEntity.PhoneNumber.builder()
                                        .phoneNumber("phone_number")
                                        .build()
                                )
                                .politicallyExposedPerson(true)
                                .preferredName("preferred_name")
                                .prefix("prefix")
                                .riskRating(LegalEntityAssociation.ChildLegalEntity.RiskRating.LOW)
                                .suffix("suffix")
                                .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                .wealthAndEmploymentDetails(
                                    WealthAndEmploymentDetails.builder()
                                        .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                                        .annualIncome(0L)
                                        .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                        .discardedAt(
                                            OffsetDateTime.parse("2019-12-27T18:11:19.117Z")
                                        )
                                        .employerCountry("employer_country")
                                        .employerName("employer_name")
                                        .employerState("employer_state")
                                        .employmentStatus(
                                            WealthAndEmploymentDetails.EmploymentStatus.EMPLOYED
                                        )
                                        .incomeCountry("income_country")
                                        .incomeSource(
                                            WealthAndEmploymentDetails.IncomeSource.FAMILY_SUPPORT
                                        )
                                        .incomeState("income_state")
                                        .industry(WealthAndEmploymentDetails.Industry.ACCOUNTING)
                                        .liveMode(true)
                                        .object_("object")
                                        .occupation(
                                            WealthAndEmploymentDetails.Occupation.CONSULTING
                                        )
                                        .sourceOfFunds(
                                            WealthAndEmploymentDetails.SourceOfFunds.ALIMONY
                                        )
                                        .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                        .wealthSource(
                                            WealthAndEmploymentDetails.WealthSource.BUSINESS_SALE
                                        )
                                        .build()
                                )
                                .website("website")
                                .build()
                        )
                        .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .discardedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .liveMode(true)
                        .object_("object")
                        .ownershipPercentage(0L)
                        .parentLegalEntityId("parent_legal_entity_id")
                        .addRelationshipType(
                            LegalEntityAssociation.RelationshipType.AUTHORIZED_SIGNER
                        )
                        .title("title")
                        .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .build()
                )
                .legalEntityType(LegalEntity.LegalEntityType.BUSINESS)
                .legalStructure(LegalEntity.LegalStructure.CORPORATION)
                .liveMode(true)
                .metadata(
                    LegalEntity.Metadata.builder()
                        .putAdditionalProperty("key", JsonValue.from("value"))
                        .putAdditionalProperty("foo", JsonValue.from("bar"))
                        .putAdditionalProperty("modern", JsonValue.from("treasury"))
                        .build()
                )
                .middleName("middle_name")
                .object_("object")
                .addPhoneNumber(
                    LegalEntity.PhoneNumber.builder().phoneNumber("phone_number").build()
                )
                .politicallyExposedPerson(true)
                .preferredName("preferred_name")
                .prefix("prefix")
                .riskRating(LegalEntity.RiskRating.LOW)
                .suffix("suffix")
                .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                .wealthAndEmploymentDetails(
                    WealthAndEmploymentDetails.builder()
                        .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                        .annualIncome(0L)
                        .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .discardedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .employerCountry("employer_country")
                        .employerName("employer_name")
                        .employerState("employer_state")
                        .employmentStatus(WealthAndEmploymentDetails.EmploymentStatus.EMPLOYED)
                        .incomeCountry("income_country")
                        .incomeSource(WealthAndEmploymentDetails.IncomeSource.FAMILY_SUPPORT)
                        .incomeState("income_state")
                        .industry(WealthAndEmploymentDetails.Industry.ACCOUNTING)
                        .liveMode(true)
                        .object_("object")
                        .occupation(WealthAndEmploymentDetails.Occupation.CONSULTING)
                        .sourceOfFunds(WealthAndEmploymentDetails.SourceOfFunds.ALIMONY)
                        .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .wealthSource(WealthAndEmploymentDetails.WealthSource.BUSINESS_SALE)
                        .build()
                )
                .website("website")
                .build()

        val roundtrippedLegalEntity =
            jsonMapper.readValue(
                jsonMapper.writeValueAsString(legalEntity),
                jacksonTypeRef<LegalEntity>(),
            )

        assertThat(roundtrippedLegalEntity).isEqualTo(legalEntity)
    }
}
