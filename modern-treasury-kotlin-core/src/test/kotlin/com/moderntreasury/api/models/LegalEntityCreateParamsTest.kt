// File generated from our OpenAPI spec by Stainless.

package com.moderntreasury.api.models

import com.moderntreasury.api.models.*
import java.time.LocalDate
import org.assertj.core.api.Assertions.assertThat
import org.junit.jupiter.api.Test

class LegalEntityCreateParamsTest {

    @Test
    fun createLegalEntityCreateParams() {
        LegalEntityCreateParams.builder()
            .legalEntityType(LegalEntityCreateParams.LegalEntityType.BUSINESS)
            .addresses(
                listOf(
                    LegalEntityCreateParams.LegalEntityAddressCreateRequest.builder()
                        .country("country")
                        .line1("line1")
                        .locality("locality")
                        .postalCode("postal_code")
                        .region("region")
                        .addressTypes(
                            listOf(
                                LegalEntityCreateParams.LegalEntityAddressCreateRequest.AddressType
                                    .BUSINESS
                            )
                        )
                        .line2("line2")
                        .build()
                )
            )
            .businessName("business_name")
            .dateFormed(LocalDate.parse("2019-12-27"))
            .dateOfBirth(LocalDate.parse("2019-12-27"))
            .doingBusinessAsNames(listOf("string"))
            .email("email")
            .firstName("first_name")
            .identifications(
                listOf(
                    LegalEntityCreateParams.IdentificationCreateRequest.builder()
                        .idNumber("id_number")
                        .idType(LegalEntityCreateParams.IdentificationCreateRequest.IdType.AR_CUIL)
                        .issuingCountry("issuing_country")
                        .build()
                )
            )
            .lastName("last_name")
            .legalEntityAssociations(
                listOf(
                    LegalEntityCreateParams.LegalEntityAssociationInlineCreateRequest.builder()
                        .relationshipTypes(
                            listOf(
                                LegalEntityCreateParams.LegalEntityAssociationInlineCreateRequest
                                    .RelationshipType
                                    .BENEFICIAL_OWNER
                            )
                        )
                        .childLegalEntity(
                            LegalEntityCreateParams.LegalEntityAssociationInlineCreateRequest
                                .ChildLegalEntityCreate
                                .builder()
                                .addresses(
                                    listOf(
                                        LegalEntityCreateParams
                                            .LegalEntityAssociationInlineCreateRequest
                                            .ChildLegalEntityCreate
                                            .LegalEntityAddressCreateRequest
                                            .builder()
                                            .country("country")
                                            .line1("line1")
                                            .locality("locality")
                                            .postalCode("postal_code")
                                            .region("region")
                                            .addressTypes(
                                                listOf(
                                                    LegalEntityCreateParams
                                                        .LegalEntityAssociationInlineCreateRequest
                                                        .ChildLegalEntityCreate
                                                        .LegalEntityAddressCreateRequest
                                                        .AddressType
                                                        .BUSINESS
                                                )
                                            )
                                            .line2("line2")
                                            .build()
                                    )
                                )
                                .businessName("business_name")
                                .dateFormed(LocalDate.parse("2019-12-27"))
                                .dateOfBirth(LocalDate.parse("2019-12-27"))
                                .doingBusinessAsNames(listOf("string"))
                                .email("email")
                                .firstName("first_name")
                                .identifications(
                                    listOf(
                                        LegalEntityCreateParams
                                            .LegalEntityAssociationInlineCreateRequest
                                            .ChildLegalEntityCreate
                                            .IdentificationCreateRequest
                                            .builder()
                                            .idNumber("id_number")
                                            .idType(
                                                LegalEntityCreateParams
                                                    .LegalEntityAssociationInlineCreateRequest
                                                    .ChildLegalEntityCreate
                                                    .IdentificationCreateRequest
                                                    .IdType
                                                    .AR_CUIL
                                            )
                                            .issuingCountry("issuing_country")
                                            .build()
                                    )
                                )
                                .lastName("last_name")
                                .legalEntityType(
                                    LegalEntityCreateParams
                                        .LegalEntityAssociationInlineCreateRequest
                                        .ChildLegalEntityCreate
                                        .LegalEntityType
                                        .BUSINESS
                                )
                                .legalStructure(
                                    LegalEntityCreateParams
                                        .LegalEntityAssociationInlineCreateRequest
                                        .ChildLegalEntityCreate
                                        .LegalStructure
                                        .CORPORATION
                                )
                                .metadata(
                                    LegalEntityCreateParams
                                        .LegalEntityAssociationInlineCreateRequest
                                        .ChildLegalEntityCreate
                                        .Metadata
                                        .builder()
                                        .build()
                                )
                                .phoneNumbers(
                                    listOf(
                                        LegalEntityCreateParams
                                            .LegalEntityAssociationInlineCreateRequest
                                            .ChildLegalEntityCreate
                                            .PhoneNumber
                                            .builder()
                                            .phoneNumber("phone_number")
                                            .build()
                                    )
                                )
                                .riskRating(
                                    LegalEntityCreateParams
                                        .LegalEntityAssociationInlineCreateRequest
                                        .ChildLegalEntityCreate
                                        .RiskRating
                                        .LOW
                                )
                                .website("website")
                                .build()
                        )
                        .childLegalEntityId("child_legal_entity_id")
                        .ownershipPercentage(123L)
                        .title("title")
                        .build()
                )
            )
            .legalStructure(LegalEntityCreateParams.LegalStructure.CORPORATION)
            .metadata(LegalEntityCreateParams.Metadata.builder().build())
            .phoneNumbers(
                listOf(
                    LegalEntityCreateParams.PhoneNumber.builder()
                        .phoneNumber("phone_number")
                        .build()
                )
            )
            .riskRating(LegalEntityCreateParams.RiskRating.LOW)
            .website("website")
            .build()
    }

    @Test
    fun getBody() {
        val params =
            LegalEntityCreateParams.builder()
                .legalEntityType(LegalEntityCreateParams.LegalEntityType.BUSINESS)
                .addresses(
                    listOf(
                        LegalEntityCreateParams.LegalEntityAddressCreateRequest.builder()
                            .country("country")
                            .line1("line1")
                            .locality("locality")
                            .postalCode("postal_code")
                            .region("region")
                            .addressTypes(
                                listOf(
                                    LegalEntityCreateParams.LegalEntityAddressCreateRequest
                                        .AddressType
                                        .BUSINESS
                                )
                            )
                            .line2("line2")
                            .build()
                    )
                )
                .businessName("business_name")
                .dateFormed(LocalDate.parse("2019-12-27"))
                .dateOfBirth(LocalDate.parse("2019-12-27"))
                .doingBusinessAsNames(listOf("string"))
                .email("email")
                .firstName("first_name")
                .identifications(
                    listOf(
                        LegalEntityCreateParams.IdentificationCreateRequest.builder()
                            .idNumber("id_number")
                            .idType(
                                LegalEntityCreateParams.IdentificationCreateRequest.IdType.AR_CUIL
                            )
                            .issuingCountry("issuing_country")
                            .build()
                    )
                )
                .lastName("last_name")
                .legalEntityAssociations(
                    listOf(
                        LegalEntityCreateParams.LegalEntityAssociationInlineCreateRequest.builder()
                            .relationshipTypes(
                                listOf(
                                    LegalEntityCreateParams
                                        .LegalEntityAssociationInlineCreateRequest
                                        .RelationshipType
                                        .BENEFICIAL_OWNER
                                )
                            )
                            .childLegalEntity(
                                LegalEntityCreateParams.LegalEntityAssociationInlineCreateRequest
                                    .ChildLegalEntityCreate
                                    .builder()
                                    .addresses(
                                        listOf(
                                            LegalEntityCreateParams
                                                .LegalEntityAssociationInlineCreateRequest
                                                .ChildLegalEntityCreate
                                                .LegalEntityAddressCreateRequest
                                                .builder()
                                                .country("country")
                                                .line1("line1")
                                                .locality("locality")
                                                .postalCode("postal_code")
                                                .region("region")
                                                .addressTypes(
                                                    listOf(
                                                        LegalEntityCreateParams
                                                            .LegalEntityAssociationInlineCreateRequest
                                                            .ChildLegalEntityCreate
                                                            .LegalEntityAddressCreateRequest
                                                            .AddressType
                                                            .BUSINESS
                                                    )
                                                )
                                                .line2("line2")
                                                .build()
                                        )
                                    )
                                    .businessName("business_name")
                                    .dateFormed(LocalDate.parse("2019-12-27"))
                                    .dateOfBirth(LocalDate.parse("2019-12-27"))
                                    .doingBusinessAsNames(listOf("string"))
                                    .email("email")
                                    .firstName("first_name")
                                    .identifications(
                                        listOf(
                                            LegalEntityCreateParams
                                                .LegalEntityAssociationInlineCreateRequest
                                                .ChildLegalEntityCreate
                                                .IdentificationCreateRequest
                                                .builder()
                                                .idNumber("id_number")
                                                .idType(
                                                    LegalEntityCreateParams
                                                        .LegalEntityAssociationInlineCreateRequest
                                                        .ChildLegalEntityCreate
                                                        .IdentificationCreateRequest
                                                        .IdType
                                                        .AR_CUIL
                                                )
                                                .issuingCountry("issuing_country")
                                                .build()
                                        )
                                    )
                                    .lastName("last_name")
                                    .legalEntityType(
                                        LegalEntityCreateParams
                                            .LegalEntityAssociationInlineCreateRequest
                                            .ChildLegalEntityCreate
                                            .LegalEntityType
                                            .BUSINESS
                                    )
                                    .legalStructure(
                                        LegalEntityCreateParams
                                            .LegalEntityAssociationInlineCreateRequest
                                            .ChildLegalEntityCreate
                                            .LegalStructure
                                            .CORPORATION
                                    )
                                    .metadata(
                                        LegalEntityCreateParams
                                            .LegalEntityAssociationInlineCreateRequest
                                            .ChildLegalEntityCreate
                                            .Metadata
                                            .builder()
                                            .build()
                                    )
                                    .phoneNumbers(
                                        listOf(
                                            LegalEntityCreateParams
                                                .LegalEntityAssociationInlineCreateRequest
                                                .ChildLegalEntityCreate
                                                .PhoneNumber
                                                .builder()
                                                .phoneNumber("phone_number")
                                                .build()
                                        )
                                    )
                                    .riskRating(
                                        LegalEntityCreateParams
                                            .LegalEntityAssociationInlineCreateRequest
                                            .ChildLegalEntityCreate
                                            .RiskRating
                                            .LOW
                                    )
                                    .website("website")
                                    .build()
                            )
                            .childLegalEntityId("child_legal_entity_id")
                            .ownershipPercentage(123L)
                            .title("title")
                            .build()
                    )
                )
                .legalStructure(LegalEntityCreateParams.LegalStructure.CORPORATION)
                .metadata(LegalEntityCreateParams.Metadata.builder().build())
                .phoneNumbers(
                    listOf(
                        LegalEntityCreateParams.PhoneNumber.builder()
                            .phoneNumber("phone_number")
                            .build()
                    )
                )
                .riskRating(LegalEntityCreateParams.RiskRating.LOW)
                .website("website")
                .build()
        val body = params.getBody()
        assertThat(body).isNotNull
        assertThat(body.legalEntityType())
            .isEqualTo(LegalEntityCreateParams.LegalEntityType.BUSINESS)
        assertThat(body.addresses())
            .isEqualTo(
                listOf(
                    LegalEntityCreateParams.LegalEntityAddressCreateRequest.builder()
                        .country("country")
                        .line1("line1")
                        .locality("locality")
                        .postalCode("postal_code")
                        .region("region")
                        .addressTypes(
                            listOf(
                                LegalEntityCreateParams.LegalEntityAddressCreateRequest.AddressType
                                    .BUSINESS
                            )
                        )
                        .line2("line2")
                        .build()
                )
            )
        assertThat(body.businessName()).isEqualTo("business_name")
        assertThat(body.dateFormed()).isEqualTo(LocalDate.parse("2019-12-27"))
        assertThat(body.dateOfBirth()).isEqualTo(LocalDate.parse("2019-12-27"))
        assertThat(body.doingBusinessAsNames()).isEqualTo(listOf("string"))
        assertThat(body.email()).isEqualTo("email")
        assertThat(body.firstName()).isEqualTo("first_name")
        assertThat(body.identifications())
            .isEqualTo(
                listOf(
                    LegalEntityCreateParams.IdentificationCreateRequest.builder()
                        .idNumber("id_number")
                        .idType(LegalEntityCreateParams.IdentificationCreateRequest.IdType.AR_CUIL)
                        .issuingCountry("issuing_country")
                        .build()
                )
            )
        assertThat(body.lastName()).isEqualTo("last_name")
        assertThat(body.legalEntityAssociations())
            .isEqualTo(
                listOf(
                    LegalEntityCreateParams.LegalEntityAssociationInlineCreateRequest.builder()
                        .relationshipTypes(
                            listOf(
                                LegalEntityCreateParams.LegalEntityAssociationInlineCreateRequest
                                    .RelationshipType
                                    .BENEFICIAL_OWNER
                            )
                        )
                        .childLegalEntity(
                            LegalEntityCreateParams.LegalEntityAssociationInlineCreateRequest
                                .ChildLegalEntityCreate
                                .builder()
                                .addresses(
                                    listOf(
                                        LegalEntityCreateParams
                                            .LegalEntityAssociationInlineCreateRequest
                                            .ChildLegalEntityCreate
                                            .LegalEntityAddressCreateRequest
                                            .builder()
                                            .country("country")
                                            .line1("line1")
                                            .locality("locality")
                                            .postalCode("postal_code")
                                            .region("region")
                                            .addressTypes(
                                                listOf(
                                                    LegalEntityCreateParams
                                                        .LegalEntityAssociationInlineCreateRequest
                                                        .ChildLegalEntityCreate
                                                        .LegalEntityAddressCreateRequest
                                                        .AddressType
                                                        .BUSINESS
                                                )
                                            )
                                            .line2("line2")
                                            .build()
                                    )
                                )
                                .businessName("business_name")
                                .dateFormed(LocalDate.parse("2019-12-27"))
                                .dateOfBirth(LocalDate.parse("2019-12-27"))
                                .doingBusinessAsNames(listOf("string"))
                                .email("email")
                                .firstName("first_name")
                                .identifications(
                                    listOf(
                                        LegalEntityCreateParams
                                            .LegalEntityAssociationInlineCreateRequest
                                            .ChildLegalEntityCreate
                                            .IdentificationCreateRequest
                                            .builder()
                                            .idNumber("id_number")
                                            .idType(
                                                LegalEntityCreateParams
                                                    .LegalEntityAssociationInlineCreateRequest
                                                    .ChildLegalEntityCreate
                                                    .IdentificationCreateRequest
                                                    .IdType
                                                    .AR_CUIL
                                            )
                                            .issuingCountry("issuing_country")
                                            .build()
                                    )
                                )
                                .lastName("last_name")
                                .legalEntityType(
                                    LegalEntityCreateParams
                                        .LegalEntityAssociationInlineCreateRequest
                                        .ChildLegalEntityCreate
                                        .LegalEntityType
                                        .BUSINESS
                                )
                                .legalStructure(
                                    LegalEntityCreateParams
                                        .LegalEntityAssociationInlineCreateRequest
                                        .ChildLegalEntityCreate
                                        .LegalStructure
                                        .CORPORATION
                                )
                                .metadata(
                                    LegalEntityCreateParams
                                        .LegalEntityAssociationInlineCreateRequest
                                        .ChildLegalEntityCreate
                                        .Metadata
                                        .builder()
                                        .build()
                                )
                                .phoneNumbers(
                                    listOf(
                                        LegalEntityCreateParams
                                            .LegalEntityAssociationInlineCreateRequest
                                            .ChildLegalEntityCreate
                                            .PhoneNumber
                                            .builder()
                                            .phoneNumber("phone_number")
                                            .build()
                                    )
                                )
                                .riskRating(
                                    LegalEntityCreateParams
                                        .LegalEntityAssociationInlineCreateRequest
                                        .ChildLegalEntityCreate
                                        .RiskRating
                                        .LOW
                                )
                                .website("website")
                                .build()
                        )
                        .childLegalEntityId("child_legal_entity_id")
                        .ownershipPercentage(123L)
                        .title("title")
                        .build()
                )
            )
        assertThat(body.legalStructure())
            .isEqualTo(LegalEntityCreateParams.LegalStructure.CORPORATION)
        assertThat(body.metadata()).isEqualTo(LegalEntityCreateParams.Metadata.builder().build())
        assertThat(body.phoneNumbers())
            .isEqualTo(
                listOf(
                    LegalEntityCreateParams.PhoneNumber.builder()
                        .phoneNumber("phone_number")
                        .build()
                )
            )
        assertThat(body.riskRating()).isEqualTo(LegalEntityCreateParams.RiskRating.LOW)
        assertThat(body.website()).isEqualTo("website")
    }

    @Test
    fun getBodyWithoutOptionalFields() {
        val params =
            LegalEntityCreateParams.builder()
                .legalEntityType(LegalEntityCreateParams.LegalEntityType.BUSINESS)
                .build()
        val body = params.getBody()
        assertThat(body).isNotNull
        assertThat(body.legalEntityType())
            .isEqualTo(LegalEntityCreateParams.LegalEntityType.BUSINESS)
    }
}
