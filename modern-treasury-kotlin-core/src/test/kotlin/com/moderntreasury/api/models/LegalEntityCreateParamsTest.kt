// File generated from our OpenAPI spec by Stainless.

package com.moderntreasury.api.models

import com.moderntreasury.api.core.JsonValue
import java.time.LocalDate
import java.time.OffsetDateTime
import org.assertj.core.api.Assertions.assertThat
import org.junit.jupiter.api.Test

internal class LegalEntityCreateParamsTest {

    @Test
    fun create() {
        LegalEntityCreateParams.builder()
            .legalEntityType(LegalEntityCreateParams.LegalEntityType.BUSINESS)
            .addAddress(
                LegalEntityCreateParams.LegalEntityAddressCreateRequest.builder()
                    .country("country")
                    .line1("line1")
                    .locality("locality")
                    .postalCode("postal_code")
                    .region("region")
                    .addAddressType(
                        LegalEntityCreateParams.LegalEntityAddressCreateRequest.AddressType.BUSINESS
                    )
                    .line2("line2")
                    .build()
            )
            .bankSettings(
                BankSettings.builder()
                    .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                    .backupWithholdingPercentage(0L)
                    .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                    .discardedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                    .enableBackupWithholding(true)
                    .liveMode(true)
                    .object_("object")
                    .privacyOptOut(true)
                    .regulationO(true)
                    .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                    .build()
            )
            .businessName("business_name")
            .citizenshipCountry("citizenship_country")
            .complianceDetails(
                LegalEntityComplianceDetail.builder()
                    .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                    .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                    .discardedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                    .issuer("issuer")
                    .liveMode(true)
                    .object_("object")
                    .tokenExpiresAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                    .tokenIssuedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                    .tokenUrl("token_url")
                    .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                    .entityValidated(true)
                    .validatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                    .build()
            )
            .dateFormed(LocalDate.parse("2019-12-27"))
            .dateOfBirth(LocalDate.parse("2019-12-27"))
            .addDoingBusinessAsName("string")
            .email("email")
            .firstName("first_name")
            .addIdentification(
                LegalEntityCreateParams.IdentificationCreateRequest.builder()
                    .idNumber("id_number")
                    .idType(LegalEntityCreateParams.IdentificationCreateRequest.IdType.AR_CUIL)
                    .expirationDate(LocalDate.parse("2019-12-27"))
                    .issuingCountry("issuing_country")
                    .issuingRegion("issuing_region")
                    .build()
            )
            .addIndustryClassification(
                LegalEntityIndustryClassification.builder()
                    .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                    .addClassificationCode("string")
                    .classificationType(LegalEntityIndustryClassification.ClassificationType.ANZSIC)
                    .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                    .discardedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                    .liveMode(true)
                    .object_("object")
                    .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                    .build()
            )
            .lastName("last_name")
            .addLegalEntityAssociation(
                LegalEntityCreateParams.LegalEntityAssociationInlineCreateRequest.builder()
                    .addRelationshipType(
                        LegalEntityCreateParams.LegalEntityAssociationInlineCreateRequest
                            .RelationshipType
                            .BENEFICIAL_OWNER
                    )
                    .childLegalEntity(
                        LegalEntityCreateParams.LegalEntityAssociationInlineCreateRequest
                            .ChildLegalEntityCreate
                            .builder()
                            .addAddress(
                                LegalEntityCreateParams.LegalEntityAssociationInlineCreateRequest
                                    .ChildLegalEntityCreate
                                    .LegalEntityAddressCreateRequest
                                    .builder()
                                    .country("country")
                                    .line1("line1")
                                    .locality("locality")
                                    .postalCode("postal_code")
                                    .region("region")
                                    .addAddressType(
                                        LegalEntityCreateParams
                                            .LegalEntityAssociationInlineCreateRequest
                                            .ChildLegalEntityCreate
                                            .LegalEntityAddressCreateRequest
                                            .AddressType
                                            .BUSINESS
                                    )
                                    .line2("line2")
                                    .build()
                            )
                            .bankSettings(
                                BankSettings.builder()
                                    .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                                    .backupWithholdingPercentage(0L)
                                    .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                    .discardedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                    .enableBackupWithholding(true)
                                    .liveMode(true)
                                    .object_("object")
                                    .privacyOptOut(true)
                                    .regulationO(true)
                                    .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                    .build()
                            )
                            .businessName("business_name")
                            .citizenshipCountry("citizenship_country")
                            .complianceDetails(
                                LegalEntityComplianceDetail.builder()
                                    .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                                    .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                    .discardedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                    .issuer("issuer")
                                    .liveMode(true)
                                    .object_("object")
                                    .tokenExpiresAt(
                                        OffsetDateTime.parse("2019-12-27T18:11:19.117Z")
                                    )
                                    .tokenIssuedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                    .tokenUrl("token_url")
                                    .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                    .entityValidated(true)
                                    .validatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                    .build()
                            )
                            .dateFormed(LocalDate.parse("2019-12-27"))
                            .dateOfBirth(LocalDate.parse("2019-12-27"))
                            .addDoingBusinessAsName("string")
                            .email("email")
                            .firstName("first_name")
                            .addIdentification(
                                LegalEntityCreateParams.LegalEntityAssociationInlineCreateRequest
                                    .ChildLegalEntityCreate
                                    .IdentificationCreateRequest
                                    .builder()
                                    .idNumber("id_number")
                                    .idType(
                                        LegalEntityCreateParams
                                            .LegalEntityAssociationInlineCreateRequest
                                            .ChildLegalEntityCreate
                                            .IdentificationCreateRequest
                                            .IdType
                                            .AR_CUIL
                                    )
                                    .expirationDate(LocalDate.parse("2019-12-27"))
                                    .issuingCountry("issuing_country")
                                    .issuingRegion("issuing_region")
                                    .build()
                            )
                            .addIndustryClassification(
                                LegalEntityIndustryClassification.builder()
                                    .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                                    .addClassificationCode("string")
                                    .classificationType(
                                        LegalEntityIndustryClassification.ClassificationType.ANZSIC
                                    )
                                    .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                    .discardedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                    .liveMode(true)
                                    .object_("object")
                                    .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                    .build()
                            )
                            .lastName("last_name")
                            .legalEntityType(
                                LegalEntityCreateParams.LegalEntityAssociationInlineCreateRequest
                                    .ChildLegalEntityCreate
                                    .LegalEntityType
                                    .BUSINESS
                            )
                            .legalStructure(
                                LegalEntityCreateParams.LegalEntityAssociationInlineCreateRequest
                                    .ChildLegalEntityCreate
                                    .LegalStructure
                                    .CORPORATION
                            )
                            .metadata(
                                LegalEntityCreateParams.LegalEntityAssociationInlineCreateRequest
                                    .ChildLegalEntityCreate
                                    .Metadata
                                    .builder()
                                    .putAdditionalProperty("key", JsonValue.from("value"))
                                    .putAdditionalProperty("foo", JsonValue.from("bar"))
                                    .putAdditionalProperty("modern", JsonValue.from("treasury"))
                                    .build()
                            )
                            .middleName("middle_name")
                            .addPhoneNumber(
                                LegalEntityCreateParams.LegalEntityAssociationInlineCreateRequest
                                    .ChildLegalEntityCreate
                                    .PhoneNumber
                                    .builder()
                                    .phoneNumber("phone_number")
                                    .build()
                            )
                            .politicallyExposedPerson(true)
                            .preferredName("preferred_name")
                            .prefix("prefix")
                            .riskRating(
                                LegalEntityCreateParams.LegalEntityAssociationInlineCreateRequest
                                    .ChildLegalEntityCreate
                                    .RiskRating
                                    .LOW
                            )
                            .suffix("suffix")
                            .wealthAndEmploymentDetails(
                                WealthAndEmploymentDetails.builder()
                                    .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                                    .annualIncome(0L)
                                    .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                    .discardedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                    .employerCountry("employer_country")
                                    .employerName("employer_name")
                                    .employerState("employer_state")
                                    .employmentStatus(
                                        WealthAndEmploymentDetails.EmploymentStatus.EMPLOYED
                                    )
                                    .incomeCountry("income_country")
                                    .incomeSource(
                                        WealthAndEmploymentDetails.IncomeSource.FAMILY_SUPPORT
                                    )
                                    .incomeState("income_state")
                                    .industry(WealthAndEmploymentDetails.Industry.ACCOUNTING)
                                    .liveMode(true)
                                    .object_("object")
                                    .occupation(WealthAndEmploymentDetails.Occupation.CONSULTING)
                                    .sourceOfFunds(WealthAndEmploymentDetails.SourceOfFunds.ALIMONY)
                                    .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                    .wealthSource(
                                        WealthAndEmploymentDetails.WealthSource.BUSINESS_SALE
                                    )
                                    .build()
                            )
                            .website("website")
                            .build()
                    )
                    .childLegalEntityId("child_legal_entity_id")
                    .ownershipPercentage(0L)
                    .title("title")
                    .build()
            )
            .legalStructure(LegalEntityCreateParams.LegalStructure.CORPORATION)
            .metadata(
                LegalEntityCreateParams.Metadata.builder()
                    .putAdditionalProperty("key", JsonValue.from("value"))
                    .putAdditionalProperty("foo", JsonValue.from("bar"))
                    .putAdditionalProperty("modern", JsonValue.from("treasury"))
                    .build()
            )
            .middleName("middle_name")
            .addPhoneNumber(
                LegalEntityCreateParams.PhoneNumber.builder().phoneNumber("phone_number").build()
            )
            .politicallyExposedPerson(true)
            .preferredName("preferred_name")
            .prefix("prefix")
            .riskRating(LegalEntityCreateParams.RiskRating.LOW)
            .suffix("suffix")
            .wealthAndEmploymentDetails(
                WealthAndEmploymentDetails.builder()
                    .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                    .annualIncome(0L)
                    .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                    .discardedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                    .employerCountry("employer_country")
                    .employerName("employer_name")
                    .employerState("employer_state")
                    .employmentStatus(WealthAndEmploymentDetails.EmploymentStatus.EMPLOYED)
                    .incomeCountry("income_country")
                    .incomeSource(WealthAndEmploymentDetails.IncomeSource.FAMILY_SUPPORT)
                    .incomeState("income_state")
                    .industry(WealthAndEmploymentDetails.Industry.ACCOUNTING)
                    .liveMode(true)
                    .object_("object")
                    .occupation(WealthAndEmploymentDetails.Occupation.CONSULTING)
                    .sourceOfFunds(WealthAndEmploymentDetails.SourceOfFunds.ALIMONY)
                    .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                    .wealthSource(WealthAndEmploymentDetails.WealthSource.BUSINESS_SALE)
                    .build()
            )
            .website("website")
            .build()
    }

    @Test
    fun body() {
        val params =
            LegalEntityCreateParams.builder()
                .legalEntityType(LegalEntityCreateParams.LegalEntityType.BUSINESS)
                .addAddress(
                    LegalEntityCreateParams.LegalEntityAddressCreateRequest.builder()
                        .country("country")
                        .line1("line1")
                        .locality("locality")
                        .postalCode("postal_code")
                        .region("region")
                        .addAddressType(
                            LegalEntityCreateParams.LegalEntityAddressCreateRequest.AddressType
                                .BUSINESS
                        )
                        .line2("line2")
                        .build()
                )
                .bankSettings(
                    BankSettings.builder()
                        .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                        .backupWithholdingPercentage(0L)
                        .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .discardedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .enableBackupWithholding(true)
                        .liveMode(true)
                        .object_("object")
                        .privacyOptOut(true)
                        .regulationO(true)
                        .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .build()
                )
                .businessName("business_name")
                .citizenshipCountry("citizenship_country")
                .complianceDetails(
                    LegalEntityComplianceDetail.builder()
                        .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                        .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .discardedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .issuer("issuer")
                        .liveMode(true)
                        .object_("object")
                        .tokenExpiresAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .tokenIssuedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .tokenUrl("token_url")
                        .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .entityValidated(true)
                        .validatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .build()
                )
                .dateFormed(LocalDate.parse("2019-12-27"))
                .dateOfBirth(LocalDate.parse("2019-12-27"))
                .addDoingBusinessAsName("string")
                .email("email")
                .firstName("first_name")
                .addIdentification(
                    LegalEntityCreateParams.IdentificationCreateRequest.builder()
                        .idNumber("id_number")
                        .idType(LegalEntityCreateParams.IdentificationCreateRequest.IdType.AR_CUIL)
                        .expirationDate(LocalDate.parse("2019-12-27"))
                        .issuingCountry("issuing_country")
                        .issuingRegion("issuing_region")
                        .build()
                )
                .addIndustryClassification(
                    LegalEntityIndustryClassification.builder()
                        .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                        .addClassificationCode("string")
                        .classificationType(
                            LegalEntityIndustryClassification.ClassificationType.ANZSIC
                        )
                        .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .discardedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .liveMode(true)
                        .object_("object")
                        .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .build()
                )
                .lastName("last_name")
                .addLegalEntityAssociation(
                    LegalEntityCreateParams.LegalEntityAssociationInlineCreateRequest.builder()
                        .addRelationshipType(
                            LegalEntityCreateParams.LegalEntityAssociationInlineCreateRequest
                                .RelationshipType
                                .BENEFICIAL_OWNER
                        )
                        .childLegalEntity(
                            LegalEntityCreateParams.LegalEntityAssociationInlineCreateRequest
                                .ChildLegalEntityCreate
                                .builder()
                                .addAddress(
                                    LegalEntityCreateParams
                                        .LegalEntityAssociationInlineCreateRequest
                                        .ChildLegalEntityCreate
                                        .LegalEntityAddressCreateRequest
                                        .builder()
                                        .country("country")
                                        .line1("line1")
                                        .locality("locality")
                                        .postalCode("postal_code")
                                        .region("region")
                                        .addAddressType(
                                            LegalEntityCreateParams
                                                .LegalEntityAssociationInlineCreateRequest
                                                .ChildLegalEntityCreate
                                                .LegalEntityAddressCreateRequest
                                                .AddressType
                                                .BUSINESS
                                        )
                                        .line2("line2")
                                        .build()
                                )
                                .bankSettings(
                                    BankSettings.builder()
                                        .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                                        .backupWithholdingPercentage(0L)
                                        .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                        .discardedAt(
                                            OffsetDateTime.parse("2019-12-27T18:11:19.117Z")
                                        )
                                        .enableBackupWithholding(true)
                                        .liveMode(true)
                                        .object_("object")
                                        .privacyOptOut(true)
                                        .regulationO(true)
                                        .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                        .build()
                                )
                                .businessName("business_name")
                                .citizenshipCountry("citizenship_country")
                                .complianceDetails(
                                    LegalEntityComplianceDetail.builder()
                                        .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                                        .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                        .discardedAt(
                                            OffsetDateTime.parse("2019-12-27T18:11:19.117Z")
                                        )
                                        .issuer("issuer")
                                        .liveMode(true)
                                        .object_("object")
                                        .tokenExpiresAt(
                                            OffsetDateTime.parse("2019-12-27T18:11:19.117Z")
                                        )
                                        .tokenIssuedAt(
                                            OffsetDateTime.parse("2019-12-27T18:11:19.117Z")
                                        )
                                        .tokenUrl("token_url")
                                        .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                        .entityValidated(true)
                                        .validatedAt(
                                            OffsetDateTime.parse("2019-12-27T18:11:19.117Z")
                                        )
                                        .build()
                                )
                                .dateFormed(LocalDate.parse("2019-12-27"))
                                .dateOfBirth(LocalDate.parse("2019-12-27"))
                                .addDoingBusinessAsName("string")
                                .email("email")
                                .firstName("first_name")
                                .addIdentification(
                                    LegalEntityCreateParams
                                        .LegalEntityAssociationInlineCreateRequest
                                        .ChildLegalEntityCreate
                                        .IdentificationCreateRequest
                                        .builder()
                                        .idNumber("id_number")
                                        .idType(
                                            LegalEntityCreateParams
                                                .LegalEntityAssociationInlineCreateRequest
                                                .ChildLegalEntityCreate
                                                .IdentificationCreateRequest
                                                .IdType
                                                .AR_CUIL
                                        )
                                        .expirationDate(LocalDate.parse("2019-12-27"))
                                        .issuingCountry("issuing_country")
                                        .issuingRegion("issuing_region")
                                        .build()
                                )
                                .addIndustryClassification(
                                    LegalEntityIndustryClassification.builder()
                                        .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                                        .addClassificationCode("string")
                                        .classificationType(
                                            LegalEntityIndustryClassification.ClassificationType
                                                .ANZSIC
                                        )
                                        .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                        .discardedAt(
                                            OffsetDateTime.parse("2019-12-27T18:11:19.117Z")
                                        )
                                        .liveMode(true)
                                        .object_("object")
                                        .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                        .build()
                                )
                                .lastName("last_name")
                                .legalEntityType(
                                    LegalEntityCreateParams
                                        .LegalEntityAssociationInlineCreateRequest
                                        .ChildLegalEntityCreate
                                        .LegalEntityType
                                        .BUSINESS
                                )
                                .legalStructure(
                                    LegalEntityCreateParams
                                        .LegalEntityAssociationInlineCreateRequest
                                        .ChildLegalEntityCreate
                                        .LegalStructure
                                        .CORPORATION
                                )
                                .metadata(
                                    LegalEntityCreateParams
                                        .LegalEntityAssociationInlineCreateRequest
                                        .ChildLegalEntityCreate
                                        .Metadata
                                        .builder()
                                        .putAdditionalProperty("key", JsonValue.from("value"))
                                        .putAdditionalProperty("foo", JsonValue.from("bar"))
                                        .putAdditionalProperty("modern", JsonValue.from("treasury"))
                                        .build()
                                )
                                .middleName("middle_name")
                                .addPhoneNumber(
                                    LegalEntityCreateParams
                                        .LegalEntityAssociationInlineCreateRequest
                                        .ChildLegalEntityCreate
                                        .PhoneNumber
                                        .builder()
                                        .phoneNumber("phone_number")
                                        .build()
                                )
                                .politicallyExposedPerson(true)
                                .preferredName("preferred_name")
                                .prefix("prefix")
                                .riskRating(
                                    LegalEntityCreateParams
                                        .LegalEntityAssociationInlineCreateRequest
                                        .ChildLegalEntityCreate
                                        .RiskRating
                                        .LOW
                                )
                                .suffix("suffix")
                                .wealthAndEmploymentDetails(
                                    WealthAndEmploymentDetails.builder()
                                        .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                                        .annualIncome(0L)
                                        .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                        .discardedAt(
                                            OffsetDateTime.parse("2019-12-27T18:11:19.117Z")
                                        )
                                        .employerCountry("employer_country")
                                        .employerName("employer_name")
                                        .employerState("employer_state")
                                        .employmentStatus(
                                            WealthAndEmploymentDetails.EmploymentStatus.EMPLOYED
                                        )
                                        .incomeCountry("income_country")
                                        .incomeSource(
                                            WealthAndEmploymentDetails.IncomeSource.FAMILY_SUPPORT
                                        )
                                        .incomeState("income_state")
                                        .industry(WealthAndEmploymentDetails.Industry.ACCOUNTING)
                                        .liveMode(true)
                                        .object_("object")
                                        .occupation(
                                            WealthAndEmploymentDetails.Occupation.CONSULTING
                                        )
                                        .sourceOfFunds(
                                            WealthAndEmploymentDetails.SourceOfFunds.ALIMONY
                                        )
                                        .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                        .wealthSource(
                                            WealthAndEmploymentDetails.WealthSource.BUSINESS_SALE
                                        )
                                        .build()
                                )
                                .website("website")
                                .build()
                        )
                        .childLegalEntityId("child_legal_entity_id")
                        .ownershipPercentage(0L)
                        .title("title")
                        .build()
                )
                .legalStructure(LegalEntityCreateParams.LegalStructure.CORPORATION)
                .metadata(
                    LegalEntityCreateParams.Metadata.builder()
                        .putAdditionalProperty("key", JsonValue.from("value"))
                        .putAdditionalProperty("foo", JsonValue.from("bar"))
                        .putAdditionalProperty("modern", JsonValue.from("treasury"))
                        .build()
                )
                .middleName("middle_name")
                .addPhoneNumber(
                    LegalEntityCreateParams.PhoneNumber.builder()
                        .phoneNumber("phone_number")
                        .build()
                )
                .politicallyExposedPerson(true)
                .preferredName("preferred_name")
                .prefix("prefix")
                .riskRating(LegalEntityCreateParams.RiskRating.LOW)
                .suffix("suffix")
                .wealthAndEmploymentDetails(
                    WealthAndEmploymentDetails.builder()
                        .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                        .annualIncome(0L)
                        .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .discardedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .employerCountry("employer_country")
                        .employerName("employer_name")
                        .employerState("employer_state")
                        .employmentStatus(WealthAndEmploymentDetails.EmploymentStatus.EMPLOYED)
                        .incomeCountry("income_country")
                        .incomeSource(WealthAndEmploymentDetails.IncomeSource.FAMILY_SUPPORT)
                        .incomeState("income_state")
                        .industry(WealthAndEmploymentDetails.Industry.ACCOUNTING)
                        .liveMode(true)
                        .object_("object")
                        .occupation(WealthAndEmploymentDetails.Occupation.CONSULTING)
                        .sourceOfFunds(WealthAndEmploymentDetails.SourceOfFunds.ALIMONY)
                        .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .wealthSource(WealthAndEmploymentDetails.WealthSource.BUSINESS_SALE)
                        .build()
                )
                .website("website")
                .build()

        val body = params._body()

        assertThat(body.legalEntityType())
            .isEqualTo(LegalEntityCreateParams.LegalEntityType.BUSINESS)
        assertThat(body.addresses())
            .containsExactly(
                LegalEntityCreateParams.LegalEntityAddressCreateRequest.builder()
                    .country("country")
                    .line1("line1")
                    .locality("locality")
                    .postalCode("postal_code")
                    .region("region")
                    .addAddressType(
                        LegalEntityCreateParams.LegalEntityAddressCreateRequest.AddressType.BUSINESS
                    )
                    .line2("line2")
                    .build()
            )
        assertThat(body.bankSettings())
            .isEqualTo(
                BankSettings.builder()
                    .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                    .backupWithholdingPercentage(0L)
                    .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                    .discardedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                    .enableBackupWithholding(true)
                    .liveMode(true)
                    .object_("object")
                    .privacyOptOut(true)
                    .regulationO(true)
                    .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                    .build()
            )
        assertThat(body.businessName()).isEqualTo("business_name")
        assertThat(body.citizenshipCountry()).isEqualTo("citizenship_country")
        assertThat(body.complianceDetails())
            .isEqualTo(
                LegalEntityComplianceDetail.builder()
                    .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                    .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                    .discardedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                    .issuer("issuer")
                    .liveMode(true)
                    .object_("object")
                    .tokenExpiresAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                    .tokenIssuedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                    .tokenUrl("token_url")
                    .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                    .entityValidated(true)
                    .validatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                    .build()
            )
        assertThat(body.dateFormed()).isEqualTo(LocalDate.parse("2019-12-27"))
        assertThat(body.dateOfBirth()).isEqualTo(LocalDate.parse("2019-12-27"))
        assertThat(body.doingBusinessAsNames()).containsExactly("string")
        assertThat(body.email()).isEqualTo("email")
        assertThat(body.firstName()).isEqualTo("first_name")
        assertThat(body.identifications())
            .containsExactly(
                LegalEntityCreateParams.IdentificationCreateRequest.builder()
                    .idNumber("id_number")
                    .idType(LegalEntityCreateParams.IdentificationCreateRequest.IdType.AR_CUIL)
                    .expirationDate(LocalDate.parse("2019-12-27"))
                    .issuingCountry("issuing_country")
                    .issuingRegion("issuing_region")
                    .build()
            )
        assertThat(body.industryClassifications())
            .containsExactly(
                LegalEntityIndustryClassification.builder()
                    .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                    .addClassificationCode("string")
                    .classificationType(LegalEntityIndustryClassification.ClassificationType.ANZSIC)
                    .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                    .discardedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                    .liveMode(true)
                    .object_("object")
                    .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                    .build()
            )
        assertThat(body.lastName()).isEqualTo("last_name")
        assertThat(body.legalEntityAssociations())
            .containsExactly(
                LegalEntityCreateParams.LegalEntityAssociationInlineCreateRequest.builder()
                    .addRelationshipType(
                        LegalEntityCreateParams.LegalEntityAssociationInlineCreateRequest
                            .RelationshipType
                            .BENEFICIAL_OWNER
                    )
                    .childLegalEntity(
                        LegalEntityCreateParams.LegalEntityAssociationInlineCreateRequest
                            .ChildLegalEntityCreate
                            .builder()
                            .addAddress(
                                LegalEntityCreateParams.LegalEntityAssociationInlineCreateRequest
                                    .ChildLegalEntityCreate
                                    .LegalEntityAddressCreateRequest
                                    .builder()
                                    .country("country")
                                    .line1("line1")
                                    .locality("locality")
                                    .postalCode("postal_code")
                                    .region("region")
                                    .addAddressType(
                                        LegalEntityCreateParams
                                            .LegalEntityAssociationInlineCreateRequest
                                            .ChildLegalEntityCreate
                                            .LegalEntityAddressCreateRequest
                                            .AddressType
                                            .BUSINESS
                                    )
                                    .line2("line2")
                                    .build()
                            )
                            .bankSettings(
                                BankSettings.builder()
                                    .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                                    .backupWithholdingPercentage(0L)
                                    .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                    .discardedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                    .enableBackupWithholding(true)
                                    .liveMode(true)
                                    .object_("object")
                                    .privacyOptOut(true)
                                    .regulationO(true)
                                    .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                    .build()
                            )
                            .businessName("business_name")
                            .citizenshipCountry("citizenship_country")
                            .complianceDetails(
                                LegalEntityComplianceDetail.builder()
                                    .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                                    .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                    .discardedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                    .issuer("issuer")
                                    .liveMode(true)
                                    .object_("object")
                                    .tokenExpiresAt(
                                        OffsetDateTime.parse("2019-12-27T18:11:19.117Z")
                                    )
                                    .tokenIssuedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                    .tokenUrl("token_url")
                                    .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                    .entityValidated(true)
                                    .validatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                    .build()
                            )
                            .dateFormed(LocalDate.parse("2019-12-27"))
                            .dateOfBirth(LocalDate.parse("2019-12-27"))
                            .addDoingBusinessAsName("string")
                            .email("email")
                            .firstName("first_name")
                            .addIdentification(
                                LegalEntityCreateParams.LegalEntityAssociationInlineCreateRequest
                                    .ChildLegalEntityCreate
                                    .IdentificationCreateRequest
                                    .builder()
                                    .idNumber("id_number")
                                    .idType(
                                        LegalEntityCreateParams
                                            .LegalEntityAssociationInlineCreateRequest
                                            .ChildLegalEntityCreate
                                            .IdentificationCreateRequest
                                            .IdType
                                            .AR_CUIL
                                    )
                                    .expirationDate(LocalDate.parse("2019-12-27"))
                                    .issuingCountry("issuing_country")
                                    .issuingRegion("issuing_region")
                                    .build()
                            )
                            .addIndustryClassification(
                                LegalEntityIndustryClassification.builder()
                                    .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                                    .addClassificationCode("string")
                                    .classificationType(
                                        LegalEntityIndustryClassification.ClassificationType.ANZSIC
                                    )
                                    .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                    .discardedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                    .liveMode(true)
                                    .object_("object")
                                    .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                    .build()
                            )
                            .lastName("last_name")
                            .legalEntityType(
                                LegalEntityCreateParams.LegalEntityAssociationInlineCreateRequest
                                    .ChildLegalEntityCreate
                                    .LegalEntityType
                                    .BUSINESS
                            )
                            .legalStructure(
                                LegalEntityCreateParams.LegalEntityAssociationInlineCreateRequest
                                    .ChildLegalEntityCreate
                                    .LegalStructure
                                    .CORPORATION
                            )
                            .metadata(
                                LegalEntityCreateParams.LegalEntityAssociationInlineCreateRequest
                                    .ChildLegalEntityCreate
                                    .Metadata
                                    .builder()
                                    .putAdditionalProperty("key", JsonValue.from("value"))
                                    .putAdditionalProperty("foo", JsonValue.from("bar"))
                                    .putAdditionalProperty("modern", JsonValue.from("treasury"))
                                    .build()
                            )
                            .middleName("middle_name")
                            .addPhoneNumber(
                                LegalEntityCreateParams.LegalEntityAssociationInlineCreateRequest
                                    .ChildLegalEntityCreate
                                    .PhoneNumber
                                    .builder()
                                    .phoneNumber("phone_number")
                                    .build()
                            )
                            .politicallyExposedPerson(true)
                            .preferredName("preferred_name")
                            .prefix("prefix")
                            .riskRating(
                                LegalEntityCreateParams.LegalEntityAssociationInlineCreateRequest
                                    .ChildLegalEntityCreate
                                    .RiskRating
                                    .LOW
                            )
                            .suffix("suffix")
                            .wealthAndEmploymentDetails(
                                WealthAndEmploymentDetails.builder()
                                    .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                                    .annualIncome(0L)
                                    .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                    .discardedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                    .employerCountry("employer_country")
                                    .employerName("employer_name")
                                    .employerState("employer_state")
                                    .employmentStatus(
                                        WealthAndEmploymentDetails.EmploymentStatus.EMPLOYED
                                    )
                                    .incomeCountry("income_country")
                                    .incomeSource(
                                        WealthAndEmploymentDetails.IncomeSource.FAMILY_SUPPORT
                                    )
                                    .incomeState("income_state")
                                    .industry(WealthAndEmploymentDetails.Industry.ACCOUNTING)
                                    .liveMode(true)
                                    .object_("object")
                                    .occupation(WealthAndEmploymentDetails.Occupation.CONSULTING)
                                    .sourceOfFunds(WealthAndEmploymentDetails.SourceOfFunds.ALIMONY)
                                    .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                    .wealthSource(
                                        WealthAndEmploymentDetails.WealthSource.BUSINESS_SALE
                                    )
                                    .build()
                            )
                            .website("website")
                            .build()
                    )
                    .childLegalEntityId("child_legal_entity_id")
                    .ownershipPercentage(0L)
                    .title("title")
                    .build()
            )
        assertThat(body.legalStructure())
            .isEqualTo(LegalEntityCreateParams.LegalStructure.CORPORATION)
        assertThat(body.metadata())
            .isEqualTo(
                LegalEntityCreateParams.Metadata.builder()
                    .putAdditionalProperty("key", JsonValue.from("value"))
                    .putAdditionalProperty("foo", JsonValue.from("bar"))
                    .putAdditionalProperty("modern", JsonValue.from("treasury"))
                    .build()
            )
        assertThat(body.middleName()).isEqualTo("middle_name")
        assertThat(body.phoneNumbers())
            .containsExactly(
                LegalEntityCreateParams.PhoneNumber.builder().phoneNumber("phone_number").build()
            )
        assertThat(body.politicallyExposedPerson()).isEqualTo(true)
        assertThat(body.preferredName()).isEqualTo("preferred_name")
        assertThat(body.prefix()).isEqualTo("prefix")
        assertThat(body.riskRating()).isEqualTo(LegalEntityCreateParams.RiskRating.LOW)
        assertThat(body.suffix()).isEqualTo("suffix")
        assertThat(body.wealthAndEmploymentDetails())
            .isEqualTo(
                WealthAndEmploymentDetails.builder()
                    .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                    .annualIncome(0L)
                    .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                    .discardedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                    .employerCountry("employer_country")
                    .employerName("employer_name")
                    .employerState("employer_state")
                    .employmentStatus(WealthAndEmploymentDetails.EmploymentStatus.EMPLOYED)
                    .incomeCountry("income_country")
                    .incomeSource(WealthAndEmploymentDetails.IncomeSource.FAMILY_SUPPORT)
                    .incomeState("income_state")
                    .industry(WealthAndEmploymentDetails.Industry.ACCOUNTING)
                    .liveMode(true)
                    .object_("object")
                    .occupation(WealthAndEmploymentDetails.Occupation.CONSULTING)
                    .sourceOfFunds(WealthAndEmploymentDetails.SourceOfFunds.ALIMONY)
                    .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                    .wealthSource(WealthAndEmploymentDetails.WealthSource.BUSINESS_SALE)
                    .build()
            )
        assertThat(body.website()).isEqualTo("website")
    }

    @Test
    fun bodyWithoutOptionalFields() {
        val params =
            LegalEntityCreateParams.builder()
                .legalEntityType(LegalEntityCreateParams.LegalEntityType.BUSINESS)
                .build()

        val body = params._body()

        assertThat(body.legalEntityType())
            .isEqualTo(LegalEntityCreateParams.LegalEntityType.BUSINESS)
    }
}
